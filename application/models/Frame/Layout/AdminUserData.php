<?php

namespace Frame\Layout;

/*
 * @autogenerated
*/
class AdminUserData extends \Frame\Base
{

    /**
     *
     * @var string
     */
    protected $admin_id;

    /**
     *
     * @var string
     */
    protected $password;

    /**
     *
     * @var string
     */
    protected $admin_type;

    /**
     *
     * @var string
     */
    protected $hash_key;

    /**
     *
     * @var string
     */
    protected $insert_time;

    /**
     *
     * @var string
     */
    protected $update_time;

    /**
     *
     * @var integer
     */
    protected $delete_flg;

    /**
     * Method to set the value of field admin_id
     *
     * @param string $admin_id
     * @return $this
     */
    public function setAdminId($admin_id)
    {
        $this->admin_id = $admin_id;

        return $this;
    }

    /**
     * Method to set the value of field password
     *
     * @param string $password
     * @return $this
     */
    public function setPassword($password)
    {
        $this->password = $password;

        return $this;
    }

    /**
     * Method to set the value of field admin_type
     *
     * @param string $admin_type
     * @return $this
     */
    public function setAdminType($admin_type)
    {
        $this->admin_type = $admin_type;

        return $this;
    }

    /**
     * Method to set the value of field hash_key
     *
     * @param string $hash_key
     * @return $this
     */
    public function setHashKey($hash_key)
    {
        $this->hash_key = $hash_key;

        return $this;
    }

    /**
     * Method to set the value of field insert_time
     *
     * @param string $insert_time
     * @return $this
     */
    public function setInsertTime($insert_time)
    {
        $this->insert_time = $insert_time;

        return $this;
    }

    /**
     * Method to set the value of field update_time
     *
     * @param string $update_time
     * @return $this
     */
    public function setUpdateTime($update_time)
    {
        $this->update_time = $update_time;

        return $this;
    }

    /**
     * Method to set the value of field delete_flg
     *
     * @param integer $delete_flg
     * @return $this
     */
    public function setDeleteFlg($delete_flg)
    {
        $this->delete_flg = $delete_flg;

        return $this;
    }

    /**
     * Returns the value of field admin_id
     *
     * @return string
     */
    public function getAdminId()
    {
        return $this->admin_id;
    }

    /**
     * Returns the value of field password
     *
     * @return string
     */
    public function getPassword()
    {
        return $this->password;
    }

    /**
     * Returns the value of field admin_type
     *
     * @return string
     */
    public function getAdminType()
    {
        return $this->admin_type;
    }

    /**
     * Returns the value of field hash_key
     *
     * @return string
     */
    public function getHashKey()
    {
        return $this->hash_key;
    }

    /**
     * Returns the value of field insert_time
     *
     * @return string
     */
    public function getInsertTime()
    {
        return $this->insert_time;
    }

    /**
     * Returns the value of field update_time
     *
     * @return string
     */
    public function getUpdateTime()
    {
        return $this->update_time;
    }

    /**
     * Returns the value of field delete_flg
     *
     * @return integer
     */
    public function getDeleteFlg()
    {
        return $this->delete_flg;
    }

    public function getSource()
    {
        return 'admin_user_data';
    }

    /**
     * Allows to query a set of records that match the specified conditions
     *
     * @return AdminUserData[]
     * @param mixed $parameters
     */
    public static function find($parameters = null)
    {
        return parent::find($parameters);
    }

    /**
     * Allows to query the first record that match the specified conditions
     *
     * @return AdminUserData
     * @param mixed $parameters
     */
    public static function findFirst($parameters = null)
    {
        return parent::findFirst($parameters);
    }

    /**
     * Independent Column Mapping.
     * Keys are the real names in the table and the values their names in the application
     *
     * @return array
     */
    public function columnMap()
    {
        return array(
            'admin_id' => 'admin_id', 
            'password' => 'password', 
            'admin_type' => 'admin_type', 
            'hash_key' => 'hash_key', 
            'insert_time' => 'insert_time', 
            'update_time' => 'update_time', 
            'delete_flg' => 'delete_flg'
        );
    }

}
